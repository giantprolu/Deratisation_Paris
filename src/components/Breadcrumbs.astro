---
export interface BreadcrumbItem {
  name: string;
  url: string;
}

export interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;
---

<!-- Breadcrumbs visuels -->
<nav class="flex items-center space-x-2 text-sm text-gray-600 mb-6" aria-label="Breadcrumb">
  <a href="/" class="hover:text-primary-600 transition-colors">Accueil</a>
  {items.map((item, index) => (
    <span key={index} class="flex items-center space-x-2">
      <svg class="w-4 h-4 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
      </svg>
      {index === items.length - 1 ? (
        <span class="text-gray-900 font-medium">{item.name}</span>
      ) : (
        <a href={item.url} class="hover:text-primary-600 transition-colors">{item.name}</a>
      )}
    </span>
  ))}
</nav>

<!-- Schema.org BreadcrumbList -->
<script type="application/ld+json" is:inline define:vars={{ items }}>
{
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "name": "Accueil",
      "item": "https://hygiene-protect-3d.fr/"
    },
    ...items.map((item, index) => ({
      "@type": "ListItem",
      "position": index + 2,
      "name": item.name,
      "item": `https://hygiene-protect-3d.fr${item.url}`
    }))
  ]
}
</script>